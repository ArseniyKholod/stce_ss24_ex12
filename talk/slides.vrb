\frametitle{Source Code \\
        \small \color{rwth-blue} Additional: plot functions v2.4 and v2.5 }
	In all plot functions was checked, whether requested state exists. These functions were wrapped in try and followed by catch. E.g. for evolution\_t::plot from v2.5, all other plots in the same way.
	\begin{lstlisting}
	template<typename T>
	void evolution_t<T>::plot(const std::string& filename, int i) const {
	  try{
	    std::ofstream ofs(filename);
	    assert(_states.size()==_times.size());
	    //check if requested state exists
	    if(i < 0 || i >= _states[0].rows())
	      throw(ex::logic_error("State outside range is requested."));
	    for (size_t k=0; k<_times.size(); ++k)
	      ofs << _times[k] << ' ' << _states[k](i) << std::endl;
	  }
	  catch(const std::exception & e){
	    std::cerr<<"std:exception was caught in evolution_t::plot with following message:"<<std::endl<<e.what()<<std::endl;
	  }
	  catch(...){
	    std::cerr<<"Exception of unknown type was caught in evolution_t::plot."<<std::endl;
	  }
	}
        \end{lstlisting}
